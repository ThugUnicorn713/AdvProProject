@page "/Events"
@using AdvProProject.Data.Models;
@using AdvProProject.Services;
@inject IService<Events> eventsService

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Admin")]

<PageTitle>Events View</PageTitle>

<h3>Events View</h3>


<EditForm FormName="Form" Model=@events OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label for="NameInput">Name</label>
    <InputText id="NameInput" @bind-Value="@events.Name"></InputText>

    <label for="DescriptInput">Description</label>
    <InputText id="DescriptInput" @bind-Value="@events.Description"></InputText>


    <label for="DateTimeInput">Date and Time</label>
    <input id="DateTimeInput" type="datetime-local" @bind="@events.DateTime" />

    <button type="submit" class="btn-primary">Create</button>


</EditForm>


@code {
    [SupplyParameterFromForm]
    Events events { get; set; } = new Events();

    public void HandleSubmit(EditContext editContext)
    {
        // Logging for debugging
        Console.WriteLine($"Name: {events.Name}");
        Console.WriteLine($"Description: {events.Description}");
        Console.WriteLine($"DateTime: {events.DateTime}");

        if (string.IsNullOrEmpty(events.Name) || string.IsNullOrEmpty(events.Description))
        {
            Console.WriteLine("Either Name or Description is NULL or empty!");
        }

        var newEvent = (Events)editContext.Model;
        eventsService.Add(newEvent);

        events = new Events(); //clears form

        
    } 
}
