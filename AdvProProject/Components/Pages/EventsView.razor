@page "/Events"
@using AdvProProject.Data.Models;
@using AdvProProject.Services;
@inject IService<Events> eventsService
@inject HttpClient Http;
@inject NavigationManager NavigationManager

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Admin")]

<PageTitle>Events View</PageTitle>

<h3>Events Edit</h3>


<EditForm FormName="Form" Model=@eventsDto OnSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <label for="NameInput">Name</label>
    <InputText id="NameInput" @bind-Value="@eventsDto.Name"></InputText>

    <label for="DescriptInput">Description</label>
    <InputText id="DescriptInput" @bind-Value="@eventsDto.Description"></InputText>

    <label for="DateTimeInput">Date and Time</label>
    <input id="DateTimeInput" type="datetime-local" @bind="@eventsDto.DateTime" />

    <label for="VenueInput">Venue</label>
    <InputText id="VenueInput" @bind-Value="@eventsDto.Venue"></InputText>

    <label for="ActivityInput">Activities</label>
    <InputText id="ActivityInput" @bind-Value="@eventsDto.Activity"></InputText>

    <button type="submit" class="btn-primary">Create</button>

</EditForm>



@code {
    [SupplyParameterFromForm]

    EventsDTO eventsDto { get; set; } = new EventsDTO();

    public void HandleSubmit() 
    {
        Console.WriteLine($"Name: {eventsDto.Name}");
        Console.WriteLine($"Description: {eventsDto.Description}");

        var newEvent = new Events
        {
                Name = eventsDto.Name,
                Description = eventsDto.Description,
                DateTime = eventsDto.DateTime,
                Venue = eventsDto.Venue,
                Activity = eventsDto.Activity
        };

        eventsService.Add(newEvent);

        eventsDto = new EventsDTO(); //clears form
    }



}